generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account_ban_history {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  account_id Int
  reason     String   @db.VarChar(255)
  banned_at  BigInt
  expired_at BigInt
  banned_by  Int
  players    players  @relation(fields: [banned_by], references: [id], onDelete: Cascade, map: "account_ban_history_ibfk_2")
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, map: "account_ban_history_ibfk_3")

  @@index([account_id], map: "account_id")
  @@index([account_id], map: "account_id_2")
  @@index([account_id], map: "account_id_3")
  @@index([account_id], map: "account_id_4")
  @@index([account_id], map: "account_id_5")
  @@index([account_id], map: "account_id_6")
  @@index([account_id], map: "account_id_7")
  @@index([banned_by], map: "banned_by")
}

model account_bans {
  account_id Int      @id
  reason     String   @db.VarChar(255)
  banned_at  BigInt
  expires_at BigInt
  banned_by  Int
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, map: "account_bans_ibfk_1")
  players    players  @relation(fields: [banned_by], references: [id], onDelete: Cascade, map: "account_bans_ibfk_2")

  @@index([banned_by], map: "banned_by")
}

model account_credentials {
  id_credential Int      @id @default(autoincrement())
  account_id    Int      @unique(map: "account_id_UNIQUE")
  key           String   @db.VarChar(255)
  accounts      accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, map: "fk_accountCredential")

  @@index([account_id], map: "fk_accountCredential_idx")
}

model account_viplist {
  account_id  Int
  player_id   Int
  description String   @default("") @db.VarChar(128)
  icon        Int      @default(0) @db.UnsignedTinyInt
  notify      Boolean  @default(false)
  accounts    accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "account_viplist_ibfk_1")
  players     players  @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "account_viplist_ibfk_2")

  @@unique([account_id, player_id], map: "account_player_index")
  @@index([account_id], map: "account_id")
  @@index([player_id], map: "player_id")
}

model accounts {
  id                       Int                   @id @default(autoincrement())
  name                     String                @unique(map: "name") @db.VarChar(32)
  password                 String                @db.Char(40)
  secret                   String?               @db.Char(16)
  gamesecret               String?               @db.VarChar(255)
  type                     Int                   @default(1)
  premdays                 Int                   @default(0)
  coins                    Int                   @default(0)
  transferable_coins       Int                   @default(0)
  lastday                  BigInt                @default(0) @db.UnsignedBigInt
  proxy_id                 Int                   @default(0)
  email                    String                @default("") @db.VarChar(255)
  creation                 BigInt                @default(0)
  vote                     Int                   @default(0)
  key                      String?               @db.VarChar(20)
  email_new                String                @default("") @db.VarChar(255)
  email_new_time           Int                   @default(0)
  rlname                   String                @default("") @db.VarChar(255)
  location                 String                @default("") @db.VarChar(255)
  page_access              Int                   @default(0)
  email_code               String                @default("") @db.VarChar(255)
  next_email               Int                   @default(0)
  premium_points           Int                   @default(0)
  create_date              BigInt                @default(0)
  create_ip                BigInt                @default(0)
  last_post                Int                   @default(0)
  flag                     String                @default("") @db.VarChar(80)
  vip_time                 Int                   @default(0)
  guild_points             Int                   @default(0)
  guild_points_stats       Int                   @default(0)
  passed                   Int                   @default(0)
  block                    Int                   @default(0)
  refresh                  Int                   @default(0)
  birth_date               String                @default("") @db.VarChar(50)
  gender                   String                @default("") @db.VarChar(20)
  loyalty_points           BigInt                @default(0)
  authToken                String                @default("") @db.VarChar(100)
  player_sell_bank         Int?                  @default(0)
  secret_status            Boolean               @default(false)
  tournamentBalance        Int                   @default(0)
  tournamentBalanceElysium Int                   @default(0)
  created                  Int                   @default(0)
  country                  String                @default("") @db.VarChar(3)
  web_lastlogin            Int                   @default(0)
  web_flags                Int                   @default(0)
  email_hash               String                @default("") @db.VarChar(32)
  email_verified           Boolean               @default(false)
  email_next               Int                   @default(0)
  blocked                  Boolean               @default(false)
  storages                 Bytes?
  account_ban_history      account_ban_history[]
  account_bans             account_bans?
  account_credentials      account_credentials?
  account_viplist          account_viplist[]
  accounts_storage         accounts_storage[]
  players                  players[]
  store_history            store_history[]
  store_history_old        store_history_old[]   @ignore
  tickets                  tickets[]
  social_medias            SocialMedias?
  address                  Address?
  posts                    Posts[]
  profile                  Profile?
  tokens                   Tokens[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model accounts_options {
  account_id Int
  options    String @db.Text

  @@ignore
}

model accounts_storage {
  account_id Int      @default(0)
  key        Int      @default(0) @db.UnsignedInt
  value      Int      @default(0)
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "accounts_storage_ibfk_1")

  @@id([account_id, key])
}

model announcements {
  id     Int    @id @default(autoincrement())
  title  String @db.VarChar(50)
  text   String @db.VarChar(255)
  date   String @db.VarChar(20)
  author String @db.VarChar(50)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model blessings_history {
  id        Int
  player_id Int
  blessing  Int     @db.TinyInt
  loss      Boolean
  timestamp Int
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "blessings_history_ibfk_1")

  @@index([player_id], map: "blessings_history_ibfk_1")
  @@ignore
}

model character_market {
  id         Int    @id @default(autoincrement())
  world_id   Int    @default(1)
  name       String @db.VarChar(40)
  level      Int
  vocation   Int    @default(1) @db.TinyInt
  price      Int
  player_id  Int
  account_id Int
  status     Int    @db.TinyInt
}

model daily_reward_history {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  streak    Int     @default(0) @db.SmallInt
  player_id Int
  time      BigInt
  event     String? @db.VarChar(255)
  instant   Int     @default(0) @db.UnsignedTinyInt

  @@index([player_id], map: "player_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model forge_history {
  player_id Int
  timestamp Int
  action    Int    @db.TinyInt
  message   String @db.VarChar(255)
  error     Int    @db.TinyInt

  @@ignore
}

model global_storage {
  key   String @unique(map: "key") @db.VarChar(32)
  value String @db.Text
}

model guild_actions_h {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  guild_id  Int?
  player_id Int
  value     Int
  date      BigInt?
  type      Int
}

model guild_invites {
  player_id Int     @default(0)
  guild_id  Int     @default(0)
  date      Int
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "guild_invites_ibfk_1")
  guilds    guilds  @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "guild_invites_ibfk_2")

  @@id([player_id, guild_id])
  @@index([guild_id], map: "guild_id")
}

model guild_membership {
  player_id   Int         @id
  guild_id    Int
  rank_id     Int
  nick        String      @default("") @db.VarChar(15)
  players     players     @relation(fields: [player_id], references: [id], onDelete: Cascade, map: "guild_membership_ibfk_1")
  guilds      guilds      @relation(fields: [guild_id], references: [id], onDelete: Cascade, map: "guild_membership_ibfk_2")
  guild_ranks guild_ranks @relation(fields: [rank_id], references: [id], onDelete: Cascade, map: "guild_membership_ibfk_3")

  @@index([guild_id], map: "guild_id")
  @@index([rank_id], map: "rank_id")
}

model guild_ranks {
  id               Int                @id @default(autoincrement())
  guild_id         Int
  name             String             @db.VarChar(255)
  level            Int
  guild_membership guild_membership[]
  guilds           guilds             @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "guild_ranks_ibfk_1")

  @@index([guild_id], map: "guild_id")
}

model guild_transfer_h {
  id            Int     @id @default(autoincrement()) @db.UnsignedInt
  player_id     Int
  from_guild_id Int
  to_guild_id   Int
  value         Int
  date          BigInt?
}

model guild_wars {
  id             Int              @id @default(autoincrement())
  world_id       Int?             @default(1)
  guild1         Int              @default(0)
  guild2         Int              @default(0)
  name1          String           @db.VarChar(255)
  name2          String           @db.VarChar(255)
  status         Int              @default(0) @db.TinyInt
  started        BigInt           @default(0)
  ended          BigInt           @default(0)
  frags_limit    Int?             @default(100)
  duration       BigInt           @default(0)
  kills          BigInt           @default(0)
  price          BigInt           @default(0)
  guildwar_kills guildwar_kills[]

  @@index([guild1], map: "guild1")
  @@index([guild2], map: "guild2")
}

model guilds {
  id                  Int                @id @default(autoincrement())
  world_id            Int?               @default(1)
  name                String             @unique(map: "name") @db.VarChar(255)
  ownerid             Int                @unique(map: "ownerid")
  creationdata        BigInt
  motd                String             @default("") @db.VarChar(255)
  description         String             @db.MediumText
  guild_logo          Bytes?             @db.MediumBlob
  create_ip           BigInt             @default(0)
  balance             BigInt             @default(0) @db.UnsignedBigInt
  last_execute_points BigInt             @default(0)
  logo_name           String             @default("default.gif") @db.VarChar(255)
  level               Int?               @default(1)
  points              Int?               @default(0)
  streak              Int?               @default(1) @db.SmallInt
  residence           Int                @default(0)
  war_stage           Int                @default(0) @db.TinyInt
  war_frags           Int                @default(0)
  war_enemy           Int?               @default(0)
  guild_bonus         BigInt             @default(0)
  guild_invites       guild_invites[]
  guild_membership    guild_membership[]
  guild_ranks         guild_ranks[]
  players             players            @relation(fields: [ownerid], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "guilds_ibfk_1")
}

model guildwar_kills {
  id          Int        @id @default(autoincrement())
  world_id    Int?       @default(1)
  killer      String     @db.VarChar(50)
  target      String     @db.VarChar(50)
  killerguild Int        @default(0)
  targetguild Int        @default(0)
  warid       Int        @default(0)
  time        BigInt
  guild_wars  guild_wars @relation(fields: [warid], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "guildwar_kills_ibfk_1")

  @@index([warid], map: "warid")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model highscores {
  id         Int @db.TinyInt
  name       Int @db.TinyInt
  account_id Int @db.TinyInt
  group_id   Int @db.TinyInt
  level      Int @db.TinyInt
  experience Int @db.TinyInt
  vocation   Int @db.TinyInt
  rank       Int @db.TinyInt

  @@ignore
}

model hirelings {
  world_id    Int    @default(1) @db.TinyInt
  hireling_id Int    @id @default(autoincrement())
  owner_id    Int
  name        String @db.VarChar(255)
  active      Int    @db.TinyInt
  sex         Int    @db.TinyInt
  direction   Int    @default(0) @db.TinyInt
  pos_x       Int
  pos_y       Int
  pos_z       Int
  looktype    Int
  lookhead    Int
  lookbody    Int
  looklegs    Int
  lookfeet    Int
  skills      Bytes? @db.Blob
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model house_lists {
  house_id Int
  listid   Int
  list     String @db.MediumText
  world_id Int    @default(1)

  @@index([house_id], map: "house_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model houses {
  id            Int
  world_id      Int     @default(1)
  owner         Int
  owner_account Int     @default(0)
  state         Int     @default(0) @db.TinyInt
  paid          Int     @default(0) @db.UnsignedInt
  warnings      Int     @default(0)
  name          String  @db.VarChar(255)
  rent          Int     @default(0)
  town_id       Int     @default(0)
  internal_bid  BigInt  @default(0)
  bid_end       Int     @default(0)
  holder_limit  BigInt  @default(0)
  highest_bid   BigInt  @default(0)
  bidder_name   String? @db.VarChar(255)
  size          Int     @default(0)
  guildid       Int?
  beds          Int     @default(0)

  @@index([owner], map: "owner")
  @@index([town_id], map: "town_id")
  @@ignore
}

model ip_bans {
  ip         Int     @id @db.UnsignedInt
  reason     String  @db.VarChar(255)
  banned_at  BigInt
  expires_at BigInt
  banned_by  Int
  players    players @relation(fields: [banned_by], references: [id], onDelete: Cascade, map: "ip_bans_ibfk_1")

  @@index([banned_by], map: "banned_by")
}

model live_casts {
  player_id   Int     @unique(map: "player_id_2")
  cast_name   String  @db.VarChar(255)
  password    Boolean @default(false)
  description String? @db.VarChar(255)
  spectators  Int?    @default(0) @db.SmallInt
  version     Int?    @default(1220)
  players     players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "live_casts_ibfk_1")
}

model market_history {
  world_id   Int     @default(1) @db.TinyInt
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  player_id  Int
  sale       Boolean @default(false)
  itemtype   Int     @db.UnsignedInt
  tier       Int?    @default(0) @db.TinyInt
  amount     Int     @db.UnsignedSmallInt
  price      Int     @default(0) @db.UnsignedInt
  expires_at BigInt  @db.UnsignedBigInt
  inserted   BigInt  @db.UnsignedBigInt
  state      Int     @db.UnsignedTinyInt
  players    players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "market_history_ibfk_1")

  @@index([player_id, sale], map: "player_id")
}

model market_offers {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  tier      Int?    @default(0) @db.TinyInt
  player_id Int
  sale      Boolean @default(false)
  itemtype  Int     @db.UnsignedInt
  amount    Int     @db.UnsignedSmallInt
  created   BigInt  @db.UnsignedBigInt
  anonymous Boolean @default(false)
  price     Int     @default(0) @db.UnsignedInt
  world_id  Int     @default(1)
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "market_offers_ibfk_1")

  @@index([created], map: "created")
  @@index([player_id], map: "player_id")
  @@index([sale, itemtype], map: "sale")
}

model payments_recovered {
  id         Int    @id @default(autoincrement())
  account_id Int
  cod        String @db.VarChar(1000)
}

model player_binary_items {
  player_id Int
  type      Int
  items     Bytes
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "player_binary_items_ibfk_1")

  @@unique([player_id, type], map: "player_id_2")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_deaths {
  player_id              Int
  time                   BigInt  @default(0) @db.UnsignedBigInt
  level                  Int     @default(1)
  killed_by              String  @db.VarChar(255)
  is_player              Boolean @default(true)
  mostdamage_by          String  @db.VarChar(100)
  mostdamage_is_player   Boolean @default(false)
  unjustified            Boolean @default(false)
  mostdamage_unjustified Boolean @default(false)
  killer_id              Int     @default(0)
  id                     Int     @default(0)
  date                   Int?    @default(0)
  players                players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "player_deaths_ibfk_1")

  @@index([killed_by], map: "killed_by")
  @@index([mostdamage_by], map: "mostdamage_by")
  @@index([player_id], map: "player_id")
  @@ignore
}

model player_former_names {
  id          Int    @id @default(autoincrement())
  player_id   Int
  former_name String @db.VarChar(35)
  date        Int

  @@index([player_id], map: "player_id")
}

model player_hirelings {
  id        Int     @id @default(autoincrement())
  player_id Int
  name      String? @db.VarChar(255)
  active    Int     @default(0) @db.UnsignedTinyInt
  sex       Int     @default(0) @db.UnsignedTinyInt
  posx      Int     @default(0)
  posy      Int     @default(0)
  posz      Int     @default(0)
  lookbody  Int     @default(0)
  lookfeet  Int     @default(0)
  lookhead  Int     @default(0)
  looklegs  Int     @default(0)
  looktype  Int     @default(136)

  @@index([player_id], map: "player_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_items {
  player_id  Int   @default(0)
  pid        Int   @default(0)
  sid        Int   @default(0)
  itemtype   Int   @default(0)
  count      Int   @default(0)
  attributes Bytes @db.Blob

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_killers {
  kill_id   Int
  player_id Int

  @@index([kill_id], map: "kill_id")
  @@index([player_id], map: "player_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_kills {
  player_id                               Int
  time                                    BigInt  @default(0) @db.UnsignedBigInt
  target                                  Int
  unavenged                               Boolean @default(false)
  players_player_kills_player_idToplayers players @relation("player_kills_player_idToplayers", fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "player_kills_ibfk_1")
  players_player_kills_targetToplayers    players @relation("player_kills_targetToplayers", fields: [target], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "player_kills_ibfk_2")

  @@index([player_id], map: "player_kills_ibfk_1")
  @@index([target], map: "player_kills_ibfk_2")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_misc {
  player_id Int
  info      Bytes @db.Blob

  @@ignore
}

model player_namelocks {
  player_id                                       Int     @id
  reason                                          String  @db.VarChar(255)
  namelocked_at                                   BigInt
  namelocked_by                                   Int
  players_player_namelocks_player_idToplayers     players @relation("player_namelocks_player_idToplayers", fields: [player_id], references: [id], onDelete: Cascade, map: "player_namelocks_ibfk_1")
  players_player_namelocks_namelocked_byToplayers players @relation("player_namelocks_namelocked_byToplayers", fields: [namelocked_by], references: [id], onDelete: Cascade, map: "player_namelocks_ibfk_2")

  @@index([namelocked_by], map: "namelocked_by")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_prey {
  player_id Int
  name      String @db.VarChar(50)
  mindex    Int    @db.SmallInt
  mcolumn   Int

  @@ignore
}

model player_preydata {
  player_id Int     @id
  data      Bytes   @db.Blob
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, map: "player_preydata_ibfk_1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_preytimes {
  player_id    Int
  bonus_type1  Int
  bonus_value1 Int
  bonus_name1  String @db.VarChar(50)
  bonus_type2  Int
  bonus_value2 Int
  bonus_name2  String @db.VarChar(50)
  bonus_type3  Int
  bonus_value3 Int
  bonus_name3  String @db.VarChar(50)

  @@ignore
}

model player_rewards {
  player_id  Int
  sid        Int
  pid        Int     @default(0)
  itemtype   Int     @default(0)
  count      Int     @default(0)
  attributes Bytes   @db.Blob
  players    players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "player_rewards_ibfk_1")

  @@unique([player_id, sid], map: "player_id_2")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model player_stash {
  player_id  Int
  item_id    Int
  item_count Int

  @@ignore
}

model players {
  id                                                       Int                              @id @default(autoincrement())
  name                                                     String                           @unique(map: "name") @db.VarChar(255)
  group_id                                                 Int                              @default(1) @db.UnsignedSmallInt
  account_id                                               Int                              @default(0)
  level                                                    Int                              @default(1) @db.UnsignedInt
  vocation                                                 Int                              @default(0) @db.UnsignedSmallInt
  health                                                   Int                              @default(150)
  healthmax                                                Int                              @default(150)
  experience                                               BigInt                           @default(0) @db.UnsignedBigInt
  exptoday                                                 Int?
  lookbody                                                 Int                              @default(0) @db.UnsignedTinyInt
  lookfeet                                                 Int                              @default(0) @db.UnsignedTinyInt
  lookhead                                                 Int                              @default(0) @db.UnsignedTinyInt
  looklegs                                                 Int                              @default(0) @db.UnsignedTinyInt
  looktype                                                 Int                              @default(136) @db.UnsignedSmallInt
  lookaddons                                               Int                              @default(0) @db.UnsignedTinyInt
  maglevel                                                 Int                              @default(0) @db.UnsignedInt
  mana                                                     Int                              @default(0) @db.UnsignedInt
  manamax                                                  Int                              @default(0) @db.UnsignedInt
  manaspent                                                BigInt                           @default(0) @db.UnsignedBigInt
  soul                                                     Int                              @default(0) @db.UnsignedTinyInt
  town_id                                                  Int                              @default(1) @db.UnsignedInt
  posx                                                     Int                              @default(0) @db.UnsignedSmallInt
  posy                                                     Int                              @default(0) @db.UnsignedSmallInt
  posz                                                     Int                              @default(0) @db.UnsignedTinyInt
  conditions                                               Bytes                            @db.Blob
  cap                                                      Int                              @default(400) @db.UnsignedInt
  sex                                                      Int                              @default(0) @db.UnsignedTinyInt
  lastlogin                                                BigInt                           @default(0) @db.UnsignedBigInt
  lastip                                                   Int                              @default(0) @db.UnsignedInt
  save                                                     Boolean                          @default(true)
  skull                                                    Boolean                          @default(false)
  skulltime                                                BigInt                           @default(0)
  lastlogout                                               BigInt                           @default(0) @db.UnsignedBigInt
  blessings                                                Int                              @default(0) @db.TinyInt
  blessings1                                               Int                              @default(0) @db.TinyInt
  blessings2                                               Int                              @default(0) @db.TinyInt
  blessings3                                               Int                              @default(0) @db.TinyInt
  blessings4                                               Int                              @default(0) @db.TinyInt
  blessings5                                               Int                              @default(0) @db.TinyInt
  blessings6                                               Int                              @default(0) @db.TinyInt
  blessings7                                               Int                              @default(0) @db.TinyInt
  blessings8                                               Int                              @default(0) @db.TinyInt
  onlinetime                                               BigInt                           @default(0) @db.UnsignedBigInt
  deletion                                                 BigInt                           @default(0)
  balance                                                  BigInt                           @default(0) @db.UnsignedBigInt
  bonusrerollcount                                         BigInt?                          @default(0)
  quick_loot_fallback                                      Boolean?                         @default(false)
  offlinetraining_time                                     Int                              @default(43200) @db.UnsignedSmallInt
  offlinetraining_skill                                    Int                              @default(-1)
  stamina                                                  Int                              @default(2520) @db.UnsignedSmallInt
  skill_fist                                               Int                              @default(10) @db.UnsignedSmallInt
  skill_fist_tries                                         BigInt                           @default(0) @db.UnsignedBigInt
  skill_club                                               Int                              @default(10) @db.UnsignedSmallInt
  skill_club_tries                                         BigInt                           @default(0) @db.UnsignedBigInt
  skill_sword                                              Int                              @default(10) @db.UnsignedSmallInt
  skill_sword_tries                                        BigInt                           @default(0) @db.UnsignedBigInt
  skill_axe                                                Int                              @default(10) @db.UnsignedSmallInt
  skill_axe_tries                                          BigInt                           @default(0) @db.UnsignedBigInt
  skill_dist                                               Int                              @default(10) @db.UnsignedSmallInt
  skill_dist_tries                                         BigInt                           @default(0) @db.UnsignedBigInt
  skill_shielding                                          Int                              @default(10) @db.UnsignedSmallInt
  skill_shielding_tries                                    BigInt                           @default(0) @db.UnsignedBigInt
  skill_fishing                                            Int                              @default(10) @db.UnsignedSmallInt
  skill_fishing_tries                                      BigInt                           @default(0) @db.UnsignedBigInt
  deleted                                                  Boolean                          @default(false)
  description                                              String                           @default("") @db.VarChar(255)
  comment                                                  String                           @db.MediumText
  create_ip                                                BigInt                           @default(0)
  create_date                                              BigInt                           @default(0)
  hide_char                                                Int                              @default(0)
  skill_critical_hit_chance                                Int                              @default(0) @db.UnsignedInt
  skill_critical_hit_chance_tries                          BigInt                           @default(0) @db.UnsignedBigInt
  skill_critical_hit_damage                                Int                              @default(0) @db.UnsignedInt
  skill_critical_hit_damage_tries                          BigInt                           @default(0) @db.UnsignedBigInt
  skill_life_leech_chance                                  Int                              @default(0) @db.UnsignedInt
  skill_life_leech_chance_tries                            BigInt                           @default(0) @db.UnsignedBigInt
  skill_life_leech_amount                                  Int                              @default(0) @db.UnsignedInt
  skill_life_leech_amount_tries                            BigInt                           @default(0) @db.UnsignedBigInt
  skill_mana_leech_chance                                  Int                              @default(0) @db.UnsignedInt
  skill_mana_leech_chance_tries                            BigInt                           @default(0) @db.UnsignedBigInt
  skill_mana_leech_amount                                  Int                              @default(0) @db.UnsignedInt
  skill_mana_leech_amount_tries                            BigInt                           @default(0) @db.UnsignedBigInt
  skill_criticalhit_chance                                 BigInt                           @default(0) @db.UnsignedBigInt
  skill_criticalhit_damage                                 BigInt                           @default(0) @db.UnsignedBigInt
  skill_lifeleech_chance                                   BigInt                           @default(0) @db.UnsignedBigInt
  skill_lifeleech_amount                                   BigInt                           @default(0) @db.UnsignedBigInt
  skill_manaleech_chance                                   BigInt                           @default(0) @db.UnsignedBigInt
  skill_manaleech_amount                                   BigInt                           @default(0) @db.UnsignedBigInt
  prey_stamina_1                                           Int?
  prey_stamina_2                                           Int?
  prey_stamina_3                                           Int?
  prey_column                                              Int                              @default(1) @db.SmallInt
  xpboost_stamina                                          Int?
  xpboost_value                                            Int?
  marriage_status                                          BigInt                           @default(0) @db.UnsignedBigInt
  hide_skills                                              Int?
  hide_set                                                 Int?
  former                                                   String                           @default("-") @db.VarChar(255)
  signature                                                String                           @default("") @db.VarChar(255)
  marriage_spouse                                          Int                              @default(-1)
  loyalty_ranking                                          Boolean                          @default(false)
  bonus_rerolls                                            BigInt                           @default(0)
  critical                                                 Int?                             @default(0)
  bonus_reroll                                             Int                              @default(0)
  sbw_points                                               Int                              @default(0)
  instantrewardtokens                                      Int                              @default(0) @db.UnsignedInt
  charmpoints                                              Int?                             @default(0)
  direction                                                Int                              @default(2) @db.UnsignedTinyInt
  lookmount                                                Int?                             @default(0)
  version                                                  Int?                             @default(1000)
  lootaction                                               Int?                             @default(0) @db.TinyInt
  spells                                                   Bytes?                           @db.Blob
  storages                                                 Bytes?                           @db.MediumBlob
  items                                                    Bytes?
  depotitems                                               Bytes?
  inboxitems                                               Bytes?
  rewards                                                  Bytes?
  varcap                                                   Int                              @default(0)
  charmExpansion                                           Int?                             @default(0) @db.TinyInt
  bestiarykills                                            Bytes?
  bosstiarydata                                            Bytes?
  bosstiarykills                                           Bytes?
  bosstiaryslot                                            Bytes?
  bosscooldown                                             Bytes?
  bossremovecount                                          Int                              @default(0)
  charms                                                   Bytes?
  bestiaryTracker                                          Bytes?
  autoloot                                                 Bytes?                           @db.Blob
  lastday                                                  BigInt?                          @default(0)
  global_storage                                           Int                              @default(0) @db.UnsignedTinyInt
  hide_char_items                                          Boolean                          @default(false)
  cast                                                     Boolean                          @default(false)
  border_id                                                Int?
  depotlockeritems                                         Bytes?
  supplystash                                              Bytes?
  hunting_points                                           Int                              @default(0)
  rewardchest_items                                        Bytes?
  huntingExpansion                                         Int                              @default(0) @db.TinyInt
  xpboost_store                                            Int                              @default(0) @db.TinyInt
  xpboost_count                                            Int                              @default(0) @db.TinyInt
  store_regen                                              BigInt                           @default(0)
  lookmountbody                                            Int                              @default(0) @db.UnsignedTinyInt
  lookmountfeet                                            Int                              @default(0) @db.UnsignedTinyInt
  lookmounthead                                            Int                              @default(0) @db.UnsignedTinyInt
  lookmountlegs                                            Int                              @default(0) @db.UnsignedTinyInt
  hireling_count                                           Int                              @default(0)
  hireling_wardrobe                                        Bytes?                           @db.Blob
  hireling_skills                                          Bytes?                           @db.Blob
  lookfamiliarstype                                        Int                              @default(0) @db.UnsignedInt
  manashield                                               Int                              @default(0) @db.UnsignedSmallInt
  max_manashield                                           Int                              @default(0) @db.UnsignedSmallInt
  gpoints                                                  BigInt?                          @default(0)
  world_id                                                 Int                              @default(1)
  created                                                  Int                              @default(0)
  hidden                                                   Boolean                          @default(false)
  familiar_remaintime                                      Int                              @default(0)
  exalted_dust                                             Int                              @default(0)
  max_exalted_dust                                         Int                              @default(0)
  loyalt_store                                             Int                              @default(0)
  cast_on                                                  Int                              @default(0) @db.TinyInt
  exercise_delay                                           Int                              @default(0)
  frags                                                    Int                              @default(0)
  deaths                                                   Int                              @default(0)
  last_transfer                                            Int                              @default(0)
  bosstracker                                              Bytes?                           @db.Blob
  account_ban_history                                      account_ban_history[]
  account_bans                                             account_bans[]
  account_character_sale_history                           account_character_sale_history[]
  account_viplist                                          account_viplist[]
  blessings_history                                        blessings_history[]              @ignore
  free_pass                                                free_pass[]                      @ignore
  guild_invites                                            guild_invites[]
  guild_membership                                         guild_membership?
  guilds                                                   guilds?
  ip_bans                                                  ip_bans[]
  live_casts                                               live_casts?
  market_history                                           market_history[]
  market_offers                                            market_offers[]
  player_binary_items                                      player_binary_items[]
  player_deaths                                            player_deaths[]                  @ignore
  player_kills_player_kills_player_idToplayers             player_kills[]                   @relation("player_kills_player_idToplayers") @ignore
  player_kills_player_kills_targetToplayers                player_kills[]                   @relation("player_kills_targetToplayers") @ignore
  player_namelocks_player_namelocks_player_idToplayers     player_namelocks?                @relation("player_namelocks_player_idToplayers")
  player_namelocks_player_namelocks_namelocked_byToplayers player_namelocks[]               @relation("player_namelocks_namelocked_byToplayers")
  player_preydata                                          player_preydata?
  player_rewards                                           player_rewards[]
  accounts                                                 accounts                         @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "players_account_fk")
  prey_slots                                               prey_slots[]                     @ignore
  sell_players                                             sell_players?
  sell_players_history                                     sell_players_history[]
  sellchar                                                 sellchar?

  @@index([account_id], map: "account_id")
  @@index([vocation], map: "vocation")
}

model players_online {
  world_id  Int @default(1) @db.TinyInt
  player_id Int @id
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model prey_slots {
  player_id      Int
  num            Int     @db.SmallInt
  state          Int     @default(1) @db.SmallInt
  unlocked       Boolean @default(false)
  current        String  @default("") @db.VarChar(40)
  monster_list   String  @db.VarChar(360)
  free_reroll_in Int     @default(0)
  time_left      Int     @default(0) @db.SmallInt
  next_use       Int     @default(0)
  bonus_type     Int     @db.SmallInt
  bonus_value    Int     @default(0) @db.SmallInt
  bonus_grade    Int     @default(0) @db.SmallInt
  players        players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "prey_slots_ibfk_1")

  @@index([player_id], map: "player_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model prey_task {
  player_id     Int
  slot          Int
  unlocked      Int    @default(0) @db.TinyInt
  state         Int    @default(0)
  lock_state    Int    @default(0)
  creature      Int    @default(0)
  creature_list String @db.VarChar(360)
  count         Int    @default(0)
  kill_counter  Int    @default(0)
  reward_type   Int    @default(0)
  reward_value  Int    @default(0)
  reward_grade  Int    @default(0)
  next_reroll   Int    @default(0)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model s_attributes {
  item_id                Int
  attack                 String? @db.VarChar(11)
  armor                  String? @db.VarChar(11)
  defense                String? @db.VarChar(11)
  extraDef               String? @db.VarChar(4)
  range                  String? @db.VarChar(11)
  speed                  String? @db.VarChar(4)
  elementFire            String? @db.VarChar(11)
  elementIce             String? @db.VarChar(11)
  elementEarth           String? @db.VarChar(11)
  elementEnergy          String? @db.VarChar(11)
  skillShield            String? @db.VarChar(4)
  skillDist              String? @db.VarChar(4)
  skillFist              String? @db.VarChar(4)
  skillClub              String? @db.VarChar(4)
  skillAxe               String? @db.VarChar(4)
  skillSword             String? @db.VarChar(4)
  magicLevelPoints       String? @db.VarChar(4)
  absorbPercentAll       String? @db.VarChar(3)
  absorbPercentFire      String? @db.VarChar(3)
  absorbPercentEarth     String? @db.VarChar(3)
  absorbPercentEnergy    String? @db.VarChar(3)
  absorbPercentIce       String? @db.VarChar(3)
  absorbPercentDeath     String? @db.VarChar(3)
  absorbPercentHoly      String? @db.VarChar(3)
  absorbPercentPhysical  String? @db.VarChar(3)
  absorbPercentManaDrain String? @db.VarChar(3)
  absorbPercentLifeDrain String? @db.VarChar(3)
  charges                String? @db.VarChar(11)
  duration               String? @db.VarChar(11)
  preventDrop            String? @db.VarChar(11)
  containerSize          String? @db.VarChar(11)
  hitChance              String? @db.VarChar(11)
  shootType              String? @db.VarChar(12)

  @@ignore
}

model s_items {
  id     Int     @id @default(autoincrement())
  name   String  @db.Text
  descr  String? @db.Text
  weight Int
  itemid Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model server_config {
  config    String   @db.VarChar(50)
  value     String   @default("") @db.VarChar(256)
  timestamp DateTime @default(now()) @db.Timestamp(0)
  world_id  Int      @default(1)

  @@ignore
}

model store_history {
  account_id  Int
  mode        Boolean  @default(false)
  amount      Int
  coin_type   Int      @default(0) @db.TinyInt
  description String?  @db.VarChar(255)
  cust        Int
  time        BigInt?
  id          Int      @id @default(autoincrement())
  accounts    accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "store_history_ibfk_1")

  @@index([account_id], map: "store_history_ibfk_1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model store_history_old {
  account_id  Int
  mode        Int      @default(0) @db.SmallInt
  description String   @db.VarChar(3500)
  coin_amount Int
  time        BigInt   @db.UnsignedBigInt
  timestamp   Int      @default(0)
  id          Int
  coins       Int      @default(0)
  accounts    accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "store_history_old_ibfk_1")

  @@index([account_id], map: "account_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tile_store {
  world_id Int   @default(1) @db.TinyInt
  house_id Int
  data     Bytes

  @@index([house_id], map: "house_id")
  @@ignore
}

model towns {
  world_id Int    @default(1) @db.TinyInt
  id       Int    @id @default(autoincrement())
  name     String @unique(map: "name") @db.VarChar(255)
  posx     Int    @default(0)
  posy     Int    @default(0)
  posz     Int    @default(0)
}

model Profile {
  id           Int       @id @default(autoincrement())
  account_id   Int       @unique
  fisrt_name   String?
  last_name    String?
  gender       String?
  phone_number String?
  avatar_url   String?
  document     String?
  reatedAt     DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  account      accounts  @relation(fields: [account_id], references: [id])

  @@map("wp_profiles")
}

model Address {
  id             Int       @id @default(autoincrement())
  account_id     Int       @unique
  country        String?
  state_province String?
  city           String?
  street         String?
  house_number   String?
  zip_code       String?
  comment        String?
  reatedAt       DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")
  account        accounts  @relation(fields: [account_id], references: [id])

  @@map("wp_address")
}

model SocialMedias {
  id         Int       @id @default(autoincrement())
  account_id Int       @unique
  instagram  String?
  youtube    String?
  twitch     String?
  reatedAt   DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  account    accounts  @relation(fields: [account_id], references: [id])

  @@map("wp-social_medias")
}

model Posts {
  id         Int           @id @default(autoincrement())
  account_id Int?
  title      String
  published  Boolean       @default(true)
  content    String        @db.LongText
  cover      String?
  slug       String?       @unique
  category   CATEGORY_POST @default(BLOG)
  createdAt  DateTime      @default(now()) @map("created_at")
  updatedAt  DateTime?     @updatedAt @map("updated_at")
  accounts   accounts?     @relation(fields: [account_id], references: [id])

  @@index([account_id], map: "wp_posts_account_id_fkey")
  @@map("wp_posts")
}

model ProductsCategories {
  id       Int        @id @default(autoincrement())
  name     String
  desc     String?
  img_url  String?
  products Products[]

  @@map("wp_products_category")
}

model Products {
  id          Int                @id @default(autoincrement())
  category_id Int
  title       String
  quantity    Int?
  content     String             @db.TinyText
  slug        String?            @db.VarChar(100)
  img_url     String?
  price       String
  currency    String?
  createdAt   DateTime           @default(now()) @map("created_at")
  Categories  ProductsCategories @relation(fields: [category_id], references: [id])

  @@index([category_id])
  @@map("wp_products")
}

model Orders {
  id           Int          @id @default(autoincrement())
  account_id   Int
  status       ORDER_STATUS @default(PROCESSING)
  provider     String?      @db.VarChar(100)
  currency     String
  total_amount String
  orderID      String
  payerID      String?
  paymentID    String?
  description  String
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime?    @updatedAt @map("updated_at")

  @@map("wp_products_orders")
}

model Tokens {
  id         Int       @id @default(autoincrement())
  token      String
  code       String
  expired_at DateTime
  created_at DateTime  @default(now())
  isValid    Boolean   @default(false)
  account_id Int?
  accounts   accounts? @relation(fields: [account_id], references: [id])

  @@index([account_id], map: "wp_tokens_account_id_fkey")
  @@map("wp_tokens")
}

model account_character_sale {
  id          Int       @id @default(autoincrement())
  id_account  Int
  id_player   Int       @unique(map: "id_player_UNIQUE")
  status      Boolean   @default(false)
  price_type  Int       @db.TinyInt
  price_coins Int?
  price_gold  Int?
  dta_insert  DateTime  @db.DateTime(0)
  dta_valid   DateTime  @db.DateTime(0)
  dta_sale    DateTime? @db.DateTime(0)
}

model account_character_sale_history {
  id             Int       @id @default(autoincrement())
  id_old_account Int?
  id_player      Int?
  id_new_account Int?
  price_type     Boolean?
  price          Int?
  char_id        Int?
  dta_insert     DateTime  @default(now()) @db.DateTime(0)
  dta_sale       DateTime? @db.DateTime(0)
  extornada      Boolean?
  players        players?  @relation(fields: [id_player], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "id_player")

  @@index([id_new_account], map: "id_new_acc_idx")
  @@index([id_old_account], map: "id_old_acc_idx")
  @@index([id_player], map: "id_player_idx")
}

model atr_wikki_category {
  id_atr_wikki_category Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(255)
  descricao             String                  @db.VarChar(255)
  text                  String                  @db.Text
  dta_insert            DateTime                @default(now()) @db.DateTime(0)
  dta_update            DateTime                @default(now()) @db.DateTime(0)
  dta_deleted           DateTime?               @db.DateTime(0)
  is_active             Int                     @default(1) @db.TinyInt
  atr_wikki_subcategory atr_wikki_subcategory[]
}

model atr_wikki_subcategory {
  id_atr_wikki_subcategory Int                @id @default(autoincrement())
  id_atr_wikki_category    Int
  name                     String             @db.VarChar(255)
  description              String?            @db.VarChar(255)
  text                     String             @db.Text
  dta_insert               DateTime           @default(now()) @db.DateTime(0)
  dta_update               DateTime           @default(now()) @db.DateTime(0)
  dta_deleted              DateTime?          @db.DateTime(0)
  is_active                Int                @default(1) @db.TinyInt
  atr_wikki_category       atr_wikki_category @relation(fields: [id_atr_wikki_category], references: [id_atr_wikki_category], onUpdate: Restrict, map: "FK_ID_WIKKI_CATEGORY")

  @@index([id_atr_wikki_category], map: "FK_ID_WIKKI_CATEGORY_idx")
}

model comprovante {
  id       Int     @id @default(autoincrement())
  account  String  @db.VarChar(155)
  metodo   String  @db.VarChar(50)
  email    String? @db.VarChar(150)
  mensagem String  @db.Text
  valor    Float   @db.Float
  anexo    String? @db.Text
  motivo   String? @db.VarChar(255)
}

model donate_mode {
  id         Int   @id @default(autoincrement())
  quantidade Int
  valor      Float
  active     Int?  @default(1)
}

model donate_services {
  id       Int    @id @default(autoincrement())
  nome     String @db.VarChar(255)
  processo String @db.VarChar(255)
  frase    String @db.VarChar(1000)
  img      String @db.VarChar(255)
  banco    Int
  agencia  String @db.VarChar(50)
  conta    String @db.VarChar(50)
  variacao Int?
  cpf      String @db.VarChar(20)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model free_pass {
  player_id Int
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "free_pass_ibfk_1")

  @@index([player_id], map: "free_pass_ibfk_1")
  @@ignore
}

model inject {
  id   Int    @id
  word String @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model links {
  account_id Int
  code       String @db.VarChar(50)
  code_date  Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model myaac_account_actions {
  account_id Int
  ip         Int    @default(0) @db.UnsignedInt
  ipv6       Bytes  @default(dbgenerated("0x30")) @db.Binary(16)
  date       Int    @default(0)
  action     String @default("") @db.VarChar(255)

  @@index([account_id], map: "account_id")
  @@ignore
}

model myaac_admin_menu {
  id       Int    @id @default(autoincrement())
  name     String @default("") @db.VarChar(255)
  page     String @default("") @db.VarChar(255)
  ordering Int    @default(0)
  flags    Int    @default(0)
  enabled  Int    @default(1)
}

model myaac_bugtracker {
  account String @db.VarChar(255)
  type    Int    @default(0)
  status  Int    @default(0)
  text    String @db.Text
  id      Int    @default(0)
  subject String @default("") @db.VarChar(255)
  reply   Int    @default(0)
  who     Int    @default(0)
  uid     Int    @id @default(autoincrement())
  tag     Int    @default(0)
}

model myaac_changelog {
  id        Int     @id @default(autoincrement())
  body      String  @default("") @db.VarChar(500)
  type      Boolean @default(false)
  where     Boolean @default(false)
  date      Int     @default(0)
  player_id Int     @default(0)
  hidden    Boolean @default(false)
}

model myaac_config {
  id    Int    @id @default(autoincrement())
  name  String @unique(map: "name") @db.VarChar(30)
  value String @db.VarChar(1000)
}

model myaac_faq {
  id       Int     @id @default(autoincrement())
  question String  @default("") @db.VarChar(255)
  answer   String  @default("") @db.VarChar(1020)
  ordering Int     @default(0)
  hidden   Boolean @default(false)
}

model myaac_forum {
  id            Int     @id @default(autoincrement())
  first_post    Int     @default(0)
  last_post     Int     @default(0)
  section       Int     @default(0)
  replies       Int     @default(0)
  views         Int     @default(0)
  author_aid    Int     @default(0)
  author_guid   Int     @default(0)
  post_text     String  @db.Text
  post_topic    String  @default("") @db.VarChar(255)
  post_smile    Boolean @default(false)
  post_html     Boolean @default(false)
  post_date     Int     @default(0)
  last_edit_aid Int     @default(0)
  edit_date     Int     @default(0)
  post_ip       String  @default("0.0.0.0") @db.VarChar(32)
  sticked       Boolean @default(false)
  closed        Boolean @default(false)

  @@index([section], map: "section")
}

model myaac_forum_boards {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(32)
  description String  @default("") @db.VarChar(255)
  ordering    Int     @default(0)
  guild       Int     @default(0)
  access      Int     @default(0)
  closed      Boolean @default(false)
  hidden      Boolean @default(false)
}

model myaac_gallery {
  id       Int     @id @default(autoincrement())
  comment  String  @default("") @db.VarChar(255)
  image    String  @db.VarChar(255)
  thumb    String  @db.VarChar(255)
  author   String  @default("") @db.VarChar(50)
  ordering Int     @default(0)
  hidden   Boolean @default(false)
}

model myaac_menu {
  id       Int     @id @default(autoincrement())
  template String  @db.VarChar(255)
  name     String  @db.VarChar(255)
  link     String  @db.VarChar(255)
  blank    Boolean @default(false)
  color    String  @default("") @db.VarChar(6)
  category Int     @default(1)
  ordering Int     @default(0)
  enabled  Int     @default(1)
}

model myaac_monsters {
  id           Int     @id @default(autoincrement())
  hidden       Boolean @default(false)
  name         String  @db.VarChar(255)
  mana         Int     @default(0)
  exp          Int
  health       Int
  speed_lvl    Int     @default(1)
  use_haste    Boolean
  voices       String  @db.Text
  immunities   String  @db.VarChar(255)
  summonable   Boolean
  convinceable Boolean
  race         String  @db.VarChar(255)
  loot         String  @db.Text
}

model myaac_news {
  id                 Int     @id @default(autoincrement())
  title              String  @db.VarChar(100)
  body               String  @db.Text
  type               Boolean @default(false)
  date               Int     @default(0)
  category           Boolean @default(false)
  player_id          Int     @default(0)
  last_modified_by   Int     @default(0)
  last_modified_date Int     @default(0)
  comments           String  @default("") @db.VarChar(50)
  article_text       String  @default("") @db.VarChar(300)
  article_image      String  @default("") @db.VarChar(100)
  hidden             Boolean @default(false)
}

model myaac_news_categories {
  id          Int     @id @default(autoincrement())
  name        String  @default("") @db.VarChar(50)
  description String  @default("") @db.VarChar(50)
  icon_id     Int     @default(0)
  hidden      Boolean @default(false)
}

model myaac_notepad {
  id         Int    @id @default(autoincrement())
  account_id Int
  content    String @db.Text
}

model myaac_pages {
  id             Int     @id @default(autoincrement())
  name           String  @unique(map: "name") @db.VarChar(30)
  title          String  @db.VarChar(30)
  body           String  @db.Text
  date           Int     @default(0)
  player_id      Int     @default(0)
  php            Boolean @default(false)
  enable_tinymce Boolean @default(true)
  access         Int     @default(0) @db.TinyInt
  hidden         Boolean @default(false)
}

model myaac_spells {
  id            Int     @id @default(autoincrement())
  spell         String  @default("") @db.VarChar(255)
  name          String  @unique(map: "name") @db.VarChar(255)
  words         String  @default("") @db.VarChar(255)
  category      Boolean @default(false)
  type          Boolean @default(false)
  level         Int     @default(0)
  maglevel      Int     @default(0)
  mana          Int     @default(0)
  soul          Int     @default(0) @db.TinyInt
  conjure_id    Int     @default(0)
  conjure_count Int     @default(0) @db.TinyInt
  reagent       Int     @default(0)
  item_id       Int     @default(0)
  premium       Boolean @default(false)
  vocations     String  @default("") @db.VarChar(100)
  hidden        Boolean @default(false)
}

model myaac_videos {
  id         Int     @id @default(autoincrement())
  title      String  @default("") @db.VarChar(100)
  youtube_id String  @db.VarChar(20)
  author     String  @default("") @db.VarChar(50)
  ordering   Int     @default(0)
  hidden     Boolean @default(false)
}

model myaac_visitors {
  ip        String @unique(map: "ip") @db.VarChar(16)
  lastvisit Int    @default(0)
  page      String @db.VarChar(100)
}

model myaac_weapons {
  id        Int    @id
  level     Int    @default(0)
  maglevel  Int    @default(0)
  vocations String @default("") @db.VarChar(100)
}

model newsticker {
  id   Int    @id @default(autoincrement())
  date Int
  text String @db.Text
  icon String @db.VarChar(50)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pagseguro {
  date          DateTime @db.DateTime(0)
  code          String   @db.VarChar(50)
  reference     String   @db.VarChar(200)
  type          Int
  status        Int
  lastEventDate DateTime @db.DateTime(0)

  @@ignore
}

model pagseguro_transactions {
  transaction_code String   @default("") @db.VarChar(36)
  name             String?  @db.VarChar(200)
  payment_method   String   @default("") @db.VarChar(50)
  status           String   @default("") @db.VarChar(50)
  item_count       Int
  data             DateTime @db.DateTime(0)
  payment_amount   Float?   @default(0) @db.Float

  @@unique([transaction_code, status], map: "transaction_code")
  @@index([name], map: "name")
  @@index([status], map: "status")
}

model pagsegurotransacoes {
  TransacaoID      String   @db.VarChar(36)
  VendedorEmail    String   @db.VarChar(200)
  Referencia       String?  @db.VarChar(200)
  TipoFrete        String?  @db.Char(2)
  ValorFrete       Decimal? @db.Decimal(10, 2)
  Extras           Decimal? @db.Decimal(10, 2)
  Anotacao         String?  @db.Text
  TipoPagamento    String   @db.VarChar(50)
  StatusTransacao  String   @db.VarChar(50)
  CliNome          String   @db.VarChar(200)
  CliEmail         String   @db.VarChar(200)
  CliEndereco      String   @db.VarChar(200)
  CliNumero        String?  @db.VarChar(10)
  CliComplemento   String?  @db.VarChar(100)
  CliBairro        String   @db.VarChar(100)
  CliCidade        String   @db.VarChar(100)
  CliEstado        String   @db.Char(2)
  CliCEP           String   @db.VarChar(9)
  CliTelefone      String?  @db.VarChar(14)
  NumItens         Int
  Data             DateTime @db.DateTime(0)
  ProdQuantidade_x Int
  status           Int      @default(0) @db.UnsignedTinyInt

  @@unique([TransacaoID, StatusTransacao], map: "TransacaoID")
  @@index([Referencia], map: "Referencia")
  @@index([status], map: "status")
}

model payments {
  id         Int      @id @default(autoincrement())
  account_id Int
  name       String   @db.VarChar(255)
  cod        String   @db.VarChar(1000)
  method     String   @db.VarChar(200)
  status     String   @db.VarChar(255)
  price      Float?   @db.Float
  delivery   Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  newpayment Int      @default(1)
}

model paypal_transactions {
  id             Int      @id @default(autoincrement())
  payment_status String   @default("") @db.VarChar(70)
  date           DateTime @db.DateTime(0)
  payer_email    String   @default("") @db.VarChar(255)
  payer_id       String   @default("") @db.VarChar(255)
  item_number1   String   @default("") @db.VarChar(255)
  mc_gross       Float    @db.Float
  mc_currency    String   @default("") @db.VarChar(5)
  txn_id         String   @default("") @db.VarChar(255)
}

model picpay {
  id           Int     @id @default(autoincrement())
  ref          String  @unique(map: "ref") @db.VarChar(255)
  valor        Float
  pontos       Int
  status       String  @db.VarChar(50)
  account_name String  @db.VarChar(100)
  link         String? @db.VarChar(7000)
  var          Int     @default(0)
}

model sell_players {
  player_id Int     @id
  account   Int
  create    BigInt
  createip  BigInt
  coin      Int
  players   players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sell_players_ibfk_1")
}

model sell_players_history {
  player_id  Int
  accountold Int
  accountnew Int
  create     BigInt
  createip   BigInt
  buytime    BigInt
  buyip      BigInt
  coin       Int
  players    players @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sell_players_history_ibfk_1")

  @@id([player_id, buytime])
}

model sellchar {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(40)
  vocation   Int
  price      Int
  status     String    @db.VarChar(40)
  oldid      String    @db.VarChar(40)
  seller     Int       @default(0)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  players    players   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sellchar_ibfk_1")
}

model snowballwar {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  score Int
  data  String @db.VarChar(255)
  hora  String @db.VarChar(255)

  @@index([id], map: "id")
}

model tickets {
  ticket_id            Int             @id @default(autoincrement())
  ticket_subject       String?         @db.VarChar(255)
  ticket_author        String?         @db.VarChar(255)
  ticket_author_acc_id Int
  ticket_last_reply    String?         @db.VarChar(11)
  ticket_admin_reply   Int?
  ticket_date          String?         @db.VarChar(255)
  ticket_ended         String?         @db.VarChar(255)
  ticket_status        String?         @db.VarChar(255)
  ticket_category      String?         @db.VarChar(255)
  ticket_description   String?         @db.VarChar(255)
  accounts             accounts        @relation(fields: [ticket_author_acc_id], references: [id], onDelete: Cascade, map: "tickets_ibfk_1")
  tickets_reply        tickets_reply[]

  @@index([ticket_author_acc_id], map: "tickets_ibfk_1")
}

model tickets_reply {
  reply_id      Int      @id @default(autoincrement())
  ticket_id     Int?
  reply_author  String?  @db.VarChar(255)
  reply_message String?  @db.VarChar(255)
  reply_date    String?  @db.VarChar(255)
  tickets       tickets? @relation(fields: [ticket_id], references: [ticket_id], onDelete: Cascade, map: "tickets_reply_ibfk_1")

  @@index([ticket_id], map: "tickets_reply_ibfk_1")
}

model videos {
  id        Int    @id
  titulo    String @db.VarChar(255)
  descricao String @db.Text
  categoria Int
  link      String @db.VarChar(11)
  ativo     Int    @default(1)
}

model videos_categorias {
  id   Int    @id
  nome String @db.VarChar(255)
}

model videos_comentarios {
  id        Int      @id
  mensagem  String   @db.Text
  character String   @db.VarChar(255)
  ip        String   @db.VarChar(15)
  topico    Int
  data      DateTime @default(now()) @db.Timestamp(0)
  ativo     Int      @default(1)
}

model z_changelogs {
  id_changelog Int      @id @default(autoincrement()) @db.UnsignedInt
  date         DateTime @db.Date
  description  String   @db.Text
  is_active    Boolean  @default(true)
}

model z_featured_article {
  id        Int    @id @default(autoincrement())
  title     String @db.VarChar(50)
  text      String @db.VarChar(255)
  date      String @db.VarChar(30)
  author    String @db.VarChar(50)
  read_more String @db.VarChar(100)
}

model z_forum {
  id            Int     @id @default(autoincrement())
  first_post    Int     @default(0)
  last_post     Int     @default(0)
  section       Int     @default(0)
  replies       Int     @default(0)
  views         Int     @default(0)
  author_aid    Int     @default(0)
  author_guid   Int     @default(0)
  post_text     String  @db.Text
  post_topic    String  @db.VarChar(255)
  post_smile    Boolean @default(false)
  post_date     Int     @default(0)
  last_edit_aid Int     @default(0)
  edit_date     Int     @default(0)
  post_ip       String  @default("0.0.0.0") @db.VarChar(15)
  icon_id       Int     @default(0)
  news_icon     String  @default("0") @db.VarChar(50)
  post_html     Boolean @default(false)
  sticked       Boolean @default(false)
  closed        Boolean @default(false)

  @@index([section], map: "section")
}

model z_helpdesk {
  account    String   @db.VarChar(255)
  type       Int
  status     Int
  text       String   @db.Text
  id         Int
  subject    String   @db.VarChar(255)
  priority   Int
  reply      Int
  who        Int
  uid        Int      @id @default(autoincrement())
  tag        Int
  registered DateTime @default(now()) @db.Timestamp(0)
  t_id       String   @db.VarChar(11)
  c_name     String   @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_network_box {
  id           Int
  network_name String @db.VarChar(10)
  network_link String @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_news_tickers {
  date        Int     @default(1)
  author      Int
  image_id    Int     @default(0)
  text        String  @db.Text
  hide_ticker Boolean

  @@ignore
}

model z_ots_comunication {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(255)
  type      String @db.VarChar(255)
  action    String @db.VarChar(255)
  param1    String @db.VarChar(255)
  param2    String @db.VarChar(255)
  param3    String @db.VarChar(255)
  param4    String @db.VarChar(255)
  param5    String @db.VarChar(255)
  param6    String @db.VarChar(255)
  param7    String @db.VarChar(255)
  delete_it Int    @default(1)
}

model z_ots_guildcomunication {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(255)
  type      String @db.VarChar(255)
  action    String @db.VarChar(255)
  param1    String @db.VarChar(255)
  param2    String @db.VarChar(255)
  param3    String @db.VarChar(255)
  param4    String @db.VarChar(255)
  param5    String @db.VarChar(255)
  param6    String @db.VarChar(255)
  param7    String @db.VarChar(255)
  delete_it Int    @default(1)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_polls {
  id          Int
  question    String  @db.VarChar(255)
  end         Int
  start       Int
  answers     Int
  votes_all   Int
  description String? @default("0") @db.VarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_polls_answers {
  poll_id   Int
  answer_id Int
  answer    String @db.VarChar(255)
  votes     Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_replay {
  title   String? @db.VarChar(255)
  version Int?

  @@ignore
}

model z_shop_category {
  id     Int    @id @default(autoincrement())
  name   String @db.VarChar(50)
  desc   String @db.VarChar(255)
  button String @db.VarChar(50)
  hide   Int    @default(0)
}

model z_shop_donate_confirm {
  id           Int    @id @default(autoincrement())
  date         BigInt
  account_name String @db.VarChar(50)
  donate_id    Int
  msg          String @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_shop_donates {
  id           Int
  date         Int
  reference    String @db.VarChar(50)
  account_name String @db.VarChar(50)
  method       String @db.VarChar(50)
  price        String @db.VarChar(20)
  points       Int
  coins        Int
  status       String @default("") @db.VarChar(20)

  @@ignore
}

model z_shop_offer {
  id                Int
  category          Int
  points            Int     @default(0)
  coins             Int     @default(0)
  price             String  @default("") @db.VarChar(50)
  itemid            Int     @default(0)
  mount_id          String  @default("") @db.VarChar(100)
  addon_name        String  @default("") @db.VarChar(100)
  count             Int     @default(0)
  offer_type        String? @db.VarChar(255)
  offer_description String  @db.Text
  offer_name        String  @default("") @db.VarChar(255)
  offer_date        Int
  default_image     String  @default("") @db.VarChar(50)
  hide              Int     @default(0)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_shop_payment {
  id                  Int
  ref                 String @db.VarChar(10)
  account_name        String @db.VarChar(50)
  service_id          Int
  service_category_id Int
  payment_method_id   Int
  price               String @db.VarChar(50)
  points              Int    @db.UnsignedInt
  coins               Int    @db.UnsignedInt
  status              String @default("waiting") @db.VarChar(50)
  date                Int
  gift                Int    @default(0)

  @@ignore
}

model z_shopguild_history_item {
  id           Int    @id
  to_name      String @default("0") @db.VarChar(255)
  to_account   Int    @default(0)
  from_nick    String @db.VarChar(255)
  from_account Int    @default(0)
  price        Int    @default(0)
  offer_id     Int    @default(0)
  trans_state  String @db.VarChar(255)
  trans_start  Int    @default(0)
  trans_real   Int    @default(0)
}

model z_shopguild_history_pacc {
  id           Int    @id
  to_name      String @default("0") @db.VarChar(255)
  to_account   Int    @default(0)
  from_nick    String @db.VarChar(255)
  from_account Int    @default(0)
  price        Int    @default(0)
  pacc_days    Int    @default(0)
  trans_state  String @db.VarChar(255)
  trans_start  Int    @default(0)
  trans_real   Int    @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model z_shopguild_offer {
  id                Int
  points            Int     @default(0)
  itemid1           Int     @default(0)
  count1            Int     @default(0)
  itemid2           Int     @default(0)
  count2            Int     @default(0)
  offer_type        String? @db.VarChar(255)
  offer_description String  @db.Text
  offer_name        String  @db.VarChar(255)
  pid               Int     @default(0)

  @@ignore
}

enum CATEGORY_POST {
  BLOG
  TICKER
  ROADMAP
}

enum ORDER_STATUS {
  PROCESSING
  PENDING
  CANCELED
  DELIVERED
}
